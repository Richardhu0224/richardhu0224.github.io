knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('ggplot2') # the major package for visualization in R
hvi <- read_csv("zillow_hvi_msa.csv")
hvi <- read_csv("zillow_hvi_msa.csv",
col_types = cols(
RegionName = col_character(),
StateName  = col_character(),
Region   = col_character(), # Census Bureau Regions
RegionID   = col_double(),
Popu2024   = col_number(),
.default   = col_double()   # for other columns
)
)
head(hvi, 3)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('ggplot2') # the major package for visualization in R
hvi <- read_csv("zillow_hvi_msa.csv")
hvi <- read_csv("zillow_hvi_msa.csv",
col_types = cols(
RegionName = col_character(),
StateName  = col_character(),
Region   = col_character(), # Census Bureau Regions
RegionID   = col_double(),
Popu2024   = col_number(),
.default   = col_double()   # for other columns
)
)
head(hvi, 3)
head(hvi, 3)
hvi_tidy <- hvi %>%
pivot_longer( # using `pivot_longer` to reshape wide → long
cols = -c("RegionID", "RegionName", "Popu2024", "StateName", "Region"), # keep these 4 as identifier variables (don’t pivot them)
names_to = "Date",  # old column names (like "1/31/00") become a new column called Date
values_to = "HVI" # the cell values go into a new column called HVI
# values_drop_na = TRUE; default as FALSE; if TRUE, will remove rows with missing HVI.
) %>%
mutate(
Date = as.Date(Date, format = "%m/%d/%y")
)
head(hvi_tidy,3)
hvi_wide <- hvi_tidy %>%
pivot_wider(
names_from = Date,   # expand `Date` to multiple rows
values_from = HVI    # extract`HVI` column to those new columns
)
head(hvi_wide, 3)
colSums(is.na(hvi_tidy))
# TODO
library(tidyverse)
library(zoo)
install.packages("zoo")
library(tidyverse)
library(zoo)
hvi_tidy_interp <- hvi_tidy %>%
group_by(RegionName) %>%
mutate(
HVI = na.approx(HVI, na.rm = FALSE)
) %>%
ungroup()
sum(is.na(hvi_tidy_interp$HVI))
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(x = Popu2024)) +
geom_dotplot(
dotsize = 0.5,
binwidth = 1000000,
fill = "steelblue",
color = "white"
) +
labs(
title = "Dotplot of Metropolitan Statistical Area Population (2024)",
x = "population (2024)",
y = "count (each dot represents one MSA)"
) +
theme_minimal()
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_histogram(
bins = 10,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
ggsave(
filename = "Seattle and Portland HVI Trend.png",
plot = g,
width = 12,
height = 6,
dpi = 300
) # save the last plot as 12 * 5 inch png file with 300 dpi (dots per inch)
# install.packages("skimr") # you only need to install once
library(skimr)
skim(hvi_tidy) # run `skim()` to get a quick overview of the dataset
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
# install.packages("skimr") # you only need to install once
library(skimr)
skim(hvi_tidy) # run `skim()` to get a quick overview of the dataset
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
# install.packages("skimr") # you only need to install once
library(skimr)
skim(hvi_tidy) # run `skim()` to get a quick overview of the dataset
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
ws # remove NA then we can see there are 9237 rows afterwards, 3 missing values are removed hvi_tidy_NA_remove <- hvi_tidy %>%    filter(!is.na(HVI)) dim(hvi_tidy_NA_remove)
# remove NA then we can see there are 9237 rows afterwards, 3 missing values are removed
hvi_tidy_NA_remove <- hvi_tidy %>%
filter(!is.na(HVI))
dim(hvi_tidy_NA_remove)
# install.packages("skimr") # you only need to install once
library(skimr)
skim(hvi_tidy) # run `skim()` to get a quick overview of the dataset
hvi_pnw <- hvi_tidy_NA_remove %>%
filter(RegionName %in% c("Seattle, WA", "Portland, OR"))
ggplot(hvi_pnw, aes(x = Date, y = HVI, group = RegionName)) # will show below the chunk
g <- ggplot(hvi_pnw, aes(x = Date, y = HVI, color = RegionName)) # will not show the plots
g <- g + geom_line(aes(color = RegionName),
alpha = 0.8, # Opacity: 0 means fully transparent (invisible)
linetype = 6, # 6 = twodash, you can check more option using `?linetype`
linewidth = 0.8) # linewidth
g
g <- g + scale_y_continuous(labels = scales::comma, # format numbers with commas
trans = "log10") # apply base-10 log transformation
g
g <- g + coord_cartesian(xlim = c(as.Date("2010-01-01"), as.Date("2020-6-30")),
ylim = c(NA, 600000)) # we did not define the low bound of y
g
g <- g + facet_wrap(~ RegionName)
g
g <- g +
labs(
x = "Year",                # label for x axis
y = "Home Value Index",    # label for y axis
title = "Seattle and Portland Housing Trend 2010–2020", # main title
subtitle = "Data source: Zillow HVI",      # subtitle
caption = "Visualization using R and ggplot2"     # caption
)
g
g <- g + theme_light(base_size = 12) + # use a minimal theme and the base size as 12
theme(panel.grid.minor = element_blank(), # remove minor grids
legend.position = "none"
)
g
ggsave(
filename = "Seattle and Portland HVI Trend.png",
plot = g,
width = 12,
height = 6,
dpi = 300
) # save the last plot as 12 * 5 inch png file with 300 dpi (dots per inch)
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")), aes(x = Popu2024)) +
geom_histogram(
bins = 10,        # number of bins
color = "white",  # border color
alpha = 0.7       # transparency
) +
labs(title = "Histograms of Metropolitan Statistical Area Population", x = "Population (2024)", y = "Count of Cities") +
theme_minimal()
ggplot(data = hvi_tidy_NA_remove %>%
filter(Date == as.Date("2025-08-31")),
aes(x = Popu2024)) +
geom_dotplot(
dotsize = 0.5,
binwidth = 1000000,
fill = "steelblue",
color = "white"
) +
labs(
title = "Dotplot of Metropolitan Statistical Area Population (2024)",
x = "population (2024)",
y = "count (each dot represents one MSA)"
) +
theme_minimal()
latest_date <- max(hvi_tidy_NA_remove$Date, na.rm = TRUE)
ggplot(
hvi_tidy_NA_remove %>%
filter(Date == latest_date),
aes(x = Region, y = Popu2024)
) +
geom_boxplot() +
geom_jitter(width = 0.15, height = o)
latest_date <- max(hvi_tidy_NA_remove$Date, na.rm = TRUE)
ggplot(
hvi_tidy_NA_remove %>%
filter(Date == latest_date),
aes(x = Region, y = Popu2024)
) +
geom_boxplot() +
geom_jitter(width = 0.15, height = 0)
nmdb <- read_csv("SS2.csv")
nmdb <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
library(tidyverse)
nmdb_raw <- readr::read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv", show_col_types = FALSE)
nmdb <- nmdb_raw %>%
filter(GEOLEVEL %in% c("STATE", "State", "state")) %>%
transmute(
state = GEONAME,
date = paste0(YEAR, "Q", QUARTER),
series = SERIESID,
value = as.numeric(VALUE1)
) %>%
filter(!is.na(value))
glimpse(nmdb)
unique(nmdb$series) %>% head(30)
nmdb %>% distinct(date) %>% arrange(date) %>% tail(10)
unique(nmdb$series) %>% head(30)
nmdb %>% distinct(date) %>% arrange(date) %>% tail(10)
target_series <- "TOT_LOANS"
target_date <- nmdb %>% distinct(date) %>% arrange(date) %>% tail(1) %>% p
unique(nmdb$series) %>% head(30)
nmdb %>% distinct(date) %>% arrange(date) %>% tail(10)
target_series <- "TOT_LOANS"
target_date <- nmdb %>% distinct(date) %>% arrange(date) %>% tail(1) %>% pull()
target_series ; target_date
nmdb_one <- nmdb %>%
filter(series == target_series, date == target_date) %>%
mutate(group = if_else(state == "Washington", "Washington", "Rest of US"))
summary_tbl <- nmdb_one %>%
group_by(group) %>%
summarise(
n = n()
mean = mean(value, na.rm = TRUE),
nmdb_one <- nmdb %>%
filter(series == target_series, date == target_date) %>%
mutate(group = if_else(state == "Washington", "Washington", "Rest of US"))
summary_tbl <- nmdb_one %>%
group_by(group) %>%
summarise(
n = n(),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
p25 = quantile(value, 0.25, na.rm = TRUE),
p75 = quantile(value, 0.75, na.rm = TRUE),
min = min(value, na.rm = TRUE),
max = max(value, na.rm = TRUE),
.groups = "drop"
)
summary_tbl
)
nmdb_one <- nmdb %>%
filter(series == target_series, date == target_date) %>%
mutate(group = if_else(state == "Washington", "Washington", "Rest of US"))
summary_tbl <- nmdb_one %>%
group_by(group) %>%
summarise(
n = n(),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
p25 = quantile(value, 0.25, na.rm = TRUE),
p75 = quantile(value, 0.75, na.rm = TRUE),
min = min(value, na.rm = TRUE),
max = max(value, na.rm = TRUE),
.groups = "drop"
)
summary_tbl
nmdb_for_wide <- nmdb %>% filter(date == target_date)
dim_before <- c(nrow(nmdb_for_wide), ncol(nmdb_for_wide))
nmdb_wide <- nmdb_for_wide %>%
select(state, series, value) %>%
tidyr::pivot_wider(names_from = series, values_from = value)
dim_after <- c(nrow(nmdb_wide), ncol(nmdb_wide))
dim_before; dim_after
nmdb_for_wide <- nmdb %>% filter(date == target_date)
dim_before <- dim(nmdb_for_wide)
nmdb_wide <- nmdb_for_wide %>%
select(state, series, value) %>%
tidyr::pivot_wider(
names_from  = series,
values_from = value,
values_fn   = mean
)
dim_after <- dim(nmdb_wide)
dim_before; dim_after
nmdb_one %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 30) +
labs(
title = paste0("Histogram of ", target_series, " (", target_date, ")"),
x = "Value", y = "Count"
) +
theme_minimal()
nmdb_one %>%
ggplot(aes(x = group, y = value)) +
geom_boxplot() +
labs(
title = paste0("WA vs Rest: ", target_series, " (", target_date, ")"),
x = "", y = "Value"
) +
theme_minimal()
nmdb_one %>%
ggplot(aes(x = value, color = group)) +
stat_ecdf(geom = "step") +
labs(
title = paste0("ECDF of ", target_series, " (", target_date, ")"),
x = "Value", y = "Cumulative share"
) +
theme_minimal()
nmdb <- read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv")
library(tidyverse)
nmdb_raw <- readr::read_csv("nmdb-outstanding-mortgage-statistics-states-quarterly.csv", show_col_types = FALSE)
nmdb <- nmdb_raw %>%
filter(GEOLEVEL %in% c("STATE", "State", "state")) %>%
transmute(
state = GEONAME,
date = paste0(YEAR, "Q", QUARTER),
series = SERIESID,
value = as.numeric(VALUE1)
) %>%
filter(!is.na(value))
glimpse(nmdb)
unique(nmdb$series) %>% head(30)
nmdb %>% distinct(date) %>% arrange(date) %>% tail(10)
target_series <- "TOT_LOANS"
target_date <- nmdb %>% distinct(date) %>% arrange(date) %>% tail(1) %>% pull()
target_series ; target_date
nmdb_one <- nmdb %>%
filter(series == target_series, date == target_date) %>%
mutate(group = if_else(state == "Washington", "Washington", "Rest of US"))
summary_tbl <- nmdb_one %>%
group_by(group) %>%
summarise(
n = n(),
mean = mean(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
p25 = quantile(value, 0.25, na.rm = TRUE),
p75 = quantile(value, 0.75, na.rm = TRUE),
min = min(value, na.rm = TRUE),
max = max(value, na.rm = TRUE),
.groups = "drop"
)
summary_tbl
nmdb_for_wide <- nmdb %>% filter(date == target_date)
dim_before <- dim(nmdb_for_wide)
nmdb_wide <- nmdb_for_wide %>%
select(state, series, value) %>%
tidyr::pivot_wider(
names_from  = series,
values_from = value,
values_fn   = mean
)
dim_after <- dim(nmdb_wide)
dim_before; dim_after
nmdb_one %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 30) +
labs(
title = paste0("Histogram of ", target_series, " (", target_date, ")"),
x = "Value", y = "Count"
) +
theme_minimal()
nmdb_one %>%
ggplot(aes(x = group, y = value)) +
geom_boxplot() +
labs(
title = paste0("WA vs Rest: ", target_series, " (", target_date, ")"),
x = "", y = "Value"
) +
theme_minimal()
nmdb_one %>%
ggplot(aes(x = value, color = group)) +
stat_ecdf(geom = "step") +
labs(
title = paste0("ECDF of ", target_series, " (", target_date, ")"),
x = "Value", y = "Cumulative share"
) +
theme_minimal()
nmdb_one %>%
arrange(desc(value)) %>%
select(state, value) %>%
head(5)
